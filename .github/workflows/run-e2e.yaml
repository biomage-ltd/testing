name: Run end-to-end tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to run the tests on (staging, production)'
        required: true
        default: 'production'
      ref:
        description: |-
          By default the script runs the latest tag when the environment is production, and latest branch commit otherwise.
          Set this variable to override that behavior and run a specific ref regardless of the environment.
        required: false
        default: ''
      sandboxId:
        description: 'If staging, the sandbox id (by default: "default")'
        required: false
        default: 'default'
      image_sha:
        description: 'The image SHA to search in the deployment'
        required: false
        default: ''
      namespace:
        description: 'The namespace to search for deployments'
        required: false
        default: ''

jobs:
  run-e2e:
    name: ${{ format('Run e2e tests for {0}', github.event.inputs.environment) }}
    runs-on: ubuntu-20.04
    steps:
      - id: checkout
        name: Check out source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: logging
        name: Log GitHub input context
        env:
          GITHUB_INPUTS: ${{ toJSON(github.event.inputs) }}
        run: echo "$GITHUB_INPUTS"

      - id: checkout-correct-ref
        name: Check out the correct test code ref
        run: |-
          # if ENV is set to production check out the latest tag for the nightly build
          if [ "$ENV" = "production" ] && [ "$REF" = "" ]; then
            latesttag=$(git describe --tags --abbrev=0)
            echo "Checking out ${latesttag}"
            git checkout ${latesttag}
          fi
          # if any ref was provided check it out
          if [ "$REF" != "" ]; then
            echo "Checking out $REF"
            git checkout $REF
          fi
        env:
          REF: ${{ github.event.inputs.ref }}
          ENV: ${{ github.event.inputs.environment }}

      - id: setup-aws
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - id: install
        name: Install dependencies
        run: |-
          cd e2e/
          git config --global url."https://".insteadOf ssh://
          npm ci

      - id: set-up-creds
        name: Set up Kubernetes credentials.
        run: |-
          aws eks update-kubeconfig --name biomage-$ENV
        env:
          ENV: ${{ github.event.inputs.environment }}

      - id: ensure-latest-commit-is-deployed
        name: Ensure staged deployment has the latest commit
        uses: nick-invision/retry@v2
        with:
          timeout_seconds: 10
          max_attempts: 5
          retry_on: error
          command: kubectl get deploy --namespace ${{ github.event.inputs.namespace }} -o json | grep ${{ github.event.inputs.image_sha }}
          # Add jitter to break up correlated events.
          on_retry_command: sleep $(shuf -i 180-190 -n 1)s

      - id: scale-and-disable
        name: Scale up environment and disable cronjob
        run: |-
          cd e2e/

          kubectl scale --replicas 1 deploy worker --namespace worker-$SANDBOX_ID
          kubectl patch cronjobs pipeline-scale-down-job -p "{\"spec\" : {\"suspend\" : true }}" --namespace worker-$SANDBOX_ID || true

          kubectl scale --replicas 1 deploy pipeline --namespace pipeline-$SANDBOX_ID
          kubectl patch cronjobs worker-scale-down-job -p "{\"spec\" : {\"suspend\" : true }}" --namespace worker-$SANDBOX_ID || true
        env:
          CYPRESS_E2E_USERNAME: ${{ secrets.CYPRESS_E2E_USERNAME }}
          CYPRESS_E2E_PASSWORD: ${{ secrets.CYPRESS_E2E_PASSWORD }}
          K8S_ENV: ${{ github.event.inputs.environment || 'production' }}
          SANDBOX_ID: ${{ github.event.inputs.sandboxId }}

      - id: test
        name: Run e2e tests
        run: |-
          cd e2e/
          npm start
        env:
          CYPRESS_E2E_USERNAME: ${{ secrets.CYPRESS_E2E_USERNAME }}
          CYPRESS_E2E_PASSWORD: ${{ secrets.CYPRESS_E2E_PASSWORD }}
          K8S_ENV: ${{ github.event.inputs.environment || 'production' }}
          SANDBOX_ID: ${{ github.event.inputs.sandboxId }}

      - id: enable-cronjob
        if: always()
        name: Re-enable cronjob
        run: |-
          kubectl patch cronjobs pipeline-scale-down-job -p "{\"spec\" : {\"suspend\" : false }}" --namespace worker-$SANDBOX_ID || true
          kubectl patch cronjobs worker-scale-down-job -p "{\"spec\" : {\"suspend\" : false }}" --namespace worker-$SANDBOX_ID || true
        env:
          CYPRESS_E2E_USERNAME: ${{ secrets.CYPRESS_E2E_USERNAME }}
          CYPRESS_E2E_PASSWORD: ${{ secrets.CYPRESS_E2E_PASSWORD }}
          K8S_ENV: ${{ github.event.inputs.environment || 'production' }}
          SANDBOX_ID: ${{ github.event.inputs.sandboxId }}
