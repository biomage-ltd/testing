name: Run end-to-end tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to run the tests on (staging, production)'
        required: false
        default: 'production'
      ref:
        description: 'The ref to the code to be run. Can be any git ref like a branch name, tag, or commit. (default: latest tag for production tests, and master for staging).'
        required: false
        default: 'latest_tag'
  schedule:
    - cron:  '22 2 * * *'

jobs:
  run-e2e:
    name: ${{ format('Run e2e tests for {0}', github.event.inputs.environment) }}
    runs-on: ubuntu-20.04
    steps:
      - id: checkout
        name: Check out source code
        uses: actions/checkout@v2

      - id: checkout-correct-ref
        name: Check out the correct test code ref
        run: |-
          # if we are in production check out the latest tag for the nightly build
          # if we are in staging and we have no ref (default value) just use master (no need to checkout anything)
          if [ "$REF" = "latest_tag" && "$ENV" == "production" ]; then
            latesttag=$(git describe --tags)
            echo "Checking out ${latesttag}"
            git checkout ${latesttag}
          fi
          # if any ref was provided check it out
          if [ "$REF" != "latest_tag" ]; then
            echo "Checking out $REF"
            git checkout $REF
          fi
        env:
          REF: ${{ github.event.inputs.ref }}
          ENV: ${{ github.event.inputs.environment }}

      - id: checkout-biomage-utils
        if: github.event.inputs.environment == 'staging'
        name: Check out Biomage utils
        uses: actions/checkout@v2
        with:
          repository: 'biomage-ltd/biomage-utils'
          path: 'biomage-utils'

      - id: setup-biomage-utils
        if: github.event.inputs.environment == 'staging'
        name: Setup Biomage utils
        run: |-
          cd biomage-utils/
          make install
          make test

      - id: setup-aws
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - id: install-yq-jq
        if: github.event.inputs.environment == 'staging'
        name: Install yq and jq to parse config file
        run: |-
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
          sudo add-apt-repository ppa:rmescandon/yq
          sudo apt update
          sudo apt install yq -y
          sudo apt-get install jq -y

      - id: copy-experiments
        if: github.event.inputs.environment == 'staging'
        name: Copy experiments
        run: |-
          cd biomage-utils/
          for EXP_ID in $(yq e '.experiment-ids' ../config.yaml -j | jq '.[]')
          do
            biomage experiment copy -e $(echo $EXP_ID | sed s'/"//g')
          done
        env:
          BIOMAGE_EMAIL: ${{ secrets.CYPRESS_E2E_USERNAME }}

      - id: install
        name: Install dependencies
        run: |-
          cd e2e/
          git config --global url."https://".insteadOf ssh://
          npm ci

      - id: test
        name: Run e2e tests
        run: |-
          cd e2e/
          K8S_ENV=${{ github.event.inputs.environment || 'production' }} npm start
        env:
          CYPRESS_E2E_USERNAME: ${{ secrets.CYPRESS_E2E_USERNAME }}
          CYPRESS_E2E_PASSWORD: ${{ secrets.CYPRESS_E2E_PASSWORD }}

      - id: send-to-slack
        name: Send failure notification to Slack
        if: failure()
        env:
          SLACK_BOT_TOKEN: ${{ secrets.BUILD_STATUS_BOT_TOKEN }}
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: pipelines
          status: FAILED
          color: danger
